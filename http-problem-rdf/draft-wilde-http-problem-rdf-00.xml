<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc symrefs="no" ?>
<rfc category="info" ipr="trust200902" docName="draft-wilde-http-problem-rdf-00">
   <front>
      <title>RDF Model for HTTP Problem Reports</title>
      <author initials="E." surname="Wilde" fullname="Erik Wilde">
         <organization>UC Berkeley</organization>
         <address>
            <email>dret@berkeley.edu</email>
            <uri>http://dret.net/netdret/</uri>
         </address>
      </author>
      <date day="30" month="October" year="2015"/>
      <abstract>
         <t>HTTP Problem Reports are one way how clients can represent structured information about problems that occurred on the HTTP level. They carry information that is more detailed than the HTTP Status Code. This document specifies a way how to represent such information in RDF, and how this RDF model is derived from the existing JSON-based model for HTTP Problem Reports.</t>
      </abstract>
      <note title="Note to Readers">
         <t>Please discuss this draft on the <eref target="https://lists.w3.org/Archives/Public/public-hydra/">W3C Hydra CG mailing list</eref>.</t>
         <t>Online access to all versions and files is available on <eref target="https://github.com/dret/I-D/tree/master/http-problem-rdf">github</eref>.</t>
      </note>
   </front>
   <middle>
         <section title="Terminology" anchor="terminology">
         <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>
         <t>The normative format of http-problem responses is JSON. This document describes the mapping between a http-problem JSON and its RDF representation. The following conventions are used to distinguish when JSON or RDF are referred to:</t>
         <t>
            <list style="hanging">
              <t hangText="attribute:">refers to a JSON attribute</t>
              <t hangText="object:">refers to a JSON object</t>
              <t hangText="property:">refers to an rdf:Property</t>
              <t hangText="individual:">refers to an instance of an rdfs:Class</t>
            </list>
         </t>
      </section>
      <section title="HTTP Problem Details for RDF" anchor="introduction">
         <t><xref target="I-D.ietf-appsawg-http-problem"/> defines semantics for detailed HTTP error responses with two dedicated media types: application/problem+json and application/problem+xml. This specification can be used to create RDF based serializations having the same semantics, to help avoid duplicate and possibly incompatible solutions for RDF-based HTTP APIs.</t>
      </section>
      <section title="RDF Vocabulary for HTTP-Problem">
          <t>This document provides an RDF vocabulary which makes the semantics of HTTP-problem available as RDF. The vocabulary only copies the attribute descriptions of http problem, but the entire semantics of the Problem Details for HTTP APIs applications remain valid. Applications MUST use the RDF representation in such a way that the RDF representation can be used interchangeably with the normative JSON serialization of <xref target="I-D.ietf-appsawg-http-problem"/></t>
      </section>
      <section title="RDF Mapping of HTTP-Problem">
        <section title="Converting to JSON-LD">
          <t>A JSON http problem response is rendered as JSON-LD problem response by applying the http-problem-rdf JSON-LD context definition made available by this specification at</t>
          <t>https://permanent.url.to/problem.context.jsonld</t>
          <t>to the underlying JSON. There are three ways to achieve that:</t>
          <section title="External Context">
            <t>Applications may reference the context definition externally by adding a @context attribute to the JSON whose value is https://permanent.url.to/context.jsonld</t>
          </section>
          <section title="Embedded Context">
            <t>Applications may embed the context into JSON by adding a @context attribute to it, which has the same value as the @context in https://permanent.url.to/context.jsonld</t>
          </section>
          <section title="Link Header">
            <t>Rather than altering the JSON, applications may add a HTTP Link header with the JSON-LD context link relation type to the response:</t>
            <figure>
            <artwork>
Link: &lt;https://permanent.url.to/problem.context.jsonld&gt;;
   rel="http://www.w3.org/ns/json-ld#context";
   type="application/ld+json"
            </artwork>
            </figure>
          </section>
        </section>
        <section title="Example">
	        <figure>
	        <preamble>HTTP problem JSON-LD with external context</preamble>
            <artwork>
{
  "@context": "https://permanent.url.to/http-problem-context.jsonld",
  "type": "https://example.com/probs/out-of-credit",
  "title": "You do not have enough credit.",
  "detail": "Your current balance is 30, but that costs 50.",
  "instance": "/account/12345/msgs/abc"
}
            </artwork>
            </figure>
            <t>The @context attribute allows a JSON-LD processor to interpret the attributes as linked data names.</t>
            <figure>
	        <preamble>HTTP problem JSON-LD in compacted form with resolved linked data names</preamble>
            <artwork>
{
  "@id": "../account/12345/msgs/abc",
  "https ://tools.ietf.org/html/rfcXXXX/vocab#detail":
      "Your current balance is 30, but that costs 50.",
  "https://tools.ietf.org/html/rfcXXXX/vocab#title":
      "You do not have enough credit.",
  "https://tools.ietf.org/html/rfcXXXX/vocab#type": {
    "@id": "https://example.com/probs/out-of-credit",
  }
}
            </artwork>
            </figure>
            <figure>
	        <preamble>HTTP problem as RDF n-quads</preamble>
            <artwork>
&lt;http://json-ld.org/account/12345/msgs/abc&gt;
    &lt;https://tools.ietf.org/html/rfcXXXX/vocab#detail&gt;
    "Your current balance is 30, but that costs 50." .
&lt;http://json-ld.org/account/12345/msgs/abc&gt;
    &lt;https://tools.ietf.org/html/rfcXXXX/vocab#title&gt;
    "You do not have enough credit." .
&lt;http://json-ld.org/account/12345/msgs/abc&gt;
    &lt;https://tools.ietf.org/html/rfcXXXX/vocab#type&gt;
    &lt;https://example.com/probs/out-of-credit&gt; .
            </artwork>
            </figure>
        </section>
        <section title="Converting Back to JSON">
             <t>In order to convert a JSON-LD HTTP-problem back to the canonical JSON model of application/problem+json, applications remove the JSON-LD context (the @context attribute or the JSON-LD Link header). To make this conversion possible, applications MUST NOT introduce alias mappings or prefixed mappings for the attributes "type", "title", "detail" and "instance" in JSON-LD representations.
             </t>
        </section>
      </section>
      <section title="Custom Attributes">
        <section title="Converting Custom Attributes to JSON-LD">
        <t>JSON attributes without a linked data name are ignored in JSON-LD. Therefore, custom attributes like those mentioned by the http-problem I-D need to be mapped in the JSON-LD context to make them visible in the RDF model. The example below shows two custom attributes, "balance" and "accounts".</t>

        <figure>
        <preamble>HTTP problem JSON-LD with custom properties</preamble>
        <artwork>
{
  "@context": [
    "https://raw.githubusercontent.com/dret/I-D/master/http-problem-rdf/http-problem-context.jsonld",
    {
      "balance":"https://example.com/probs#balance",
      "accounts":{
        "@id":"https://example.com/probs#accounts",
        "@type":"@id"
      }
    }
  ],
  "type": "https://example.com/probs/out-of-credit",
  "title": "You do not have enough credit.",
  "detail": "Your current balance is 30, but that costs 50.",
  "instance": "/account/12345/msgs/abc",
  "balance": 30,
  "accounts": ["/account/12345",
                "/account/67890"]
}
        </artwork>
        </figure>
        <t>The linked data names of the custom attributes "balance" and "accounts" are declared in the @context, so that they become visible in the underlying RDF model. In the example above the custom properties are added as embedded @context, but they could also be externalized according to the JSON-LD rules for external @context files. As you can see below, the values of the accounts property are coerced to hyperlinks because they were defined to be of "@type":"@id" in the context.
        </t>

        <figure>
        <preamble>HTTP problem with custom attributes as compacted JSON-LD</preamble>
        <artwork>
{
  "@id": "../account/12345/msgs/abc",
  "https://example.com/probs#accounts": [
    {
      "@id": "../account/12345"
    },
    {
      "@id": "../account/67890"
    }
  ],
  "https://example.com/probs#balance": 30,
  "https://tools.ietf.org/html/rfcXXXX/vocab#detail":
    "Your current balance is 30, but that costs 50.",
  "https://tools.ietf.org/html/rfcXXXX/vocab#title":
    "You do not have enough credit.",
  "https://tools.ietf.org/html/rfcXXXX/vocab#type": {
    "@id": "http://example.com/probs#NotEnoughCredit"
  }
}
        </artwork>
        </figure>
        <t>Note that custom property URIs may be dereferenceable, but they cannot be used to establish standard http problem attributes, since the URI prefix is not present after conversion to JSON.
        In order to establish semantics for custom attributes which can be shared across applications, a link header with profile rel <xref target="RFC6906"/> may be used, and the profile URI may be published in the IANA profile registry <xref target="RFC7284"/>.</t>
        </section>
        <section title="Converting Custom Attributes back to JSON">
        <t>A HTTP-problem JSON-LD with custom properties is converted back to plain JSON by removing the @context attribute.</t>
        <t>To allow this conversion, a custom attribute name in JSON-LD MUST be the same as in the canonical application/problem+json representation. Applications MUST NOT introduce alias mappings or prefixed mappings for custom properties which are different from the custom attributes in JSON.
        </t>
        </section>
      </section>
      <section title="Limitations">
        <t>JSON-LD does not map a JSON list of lists to RDF. Hence, a JSON-LD representation of an http-problem response does not map list of list attributes in the JSON-LD context either, with the effect that such custom attributes are not visible in the RDF model.</t>
      </section>
      <section title="Security Considerations">
         <t>...</t>
      </section>

<!--
      <section title="Change Log" anchor="change-log">
         <t>Note to RFC Editor: Please remove this section before publication.</t>
         <section title="From -00 to -01">
            <t>
               <list style="symbols">
                  <t>...</t>
               </list>
            </t>
         </section>
      </section>
-->
   </middle>
   <back>
      <references title="Normative References">
      <reference anchor="RFC6906">
            <front>
               <title abbrev="The 'profile' Link Relation Type">The 'profile' Link Relation Type</title>
               <author initials='E.' surname='Wilde' fullname='Erik Wilde'>
                  <organization />
               </author>
               <date month="March" year="2013"/>
            </front>
            <seriesInfo name="RFC" value="6906"/>
         </reference>
         <reference anchor="RFC7284">
            <front>
               <title abbrev="The Profile URI Registry">The Profile URI Registry</title>
               <author initials="M." surname="Lanthaler" fullname="Markus Lanthaler">
                  <organization/>
               </author>
               <date month="June" year="2014"/>
            </front>
            <seriesInfo name="RFC" value="7284"/>
         </reference>
         <reference anchor="RFC2119">
            <front>
               <title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title>
               <author initials="S." surname="Bradner" fullname="Scott Bradner">
                  <organization/>
               </author>
               <date month="March" year="1997"/>
            </front>
            <seriesInfo name="RFC" value="2119"/>
         </reference>
         <reference anchor="RFC5988">
            <front>
               <title>Web Linking</title>
               <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
                  <organization/>
               </author>
               <date month="October" year="2010"/>
            </front>
            <seriesInfo name="RFC" value="5988"/>
         </reference>
         <reference anchor='I-D.ietf-appsawg-http-problem'>
            <front>
               <title>Problem Details for HTTP APIs</title>
               <author initials='M.' surname='Nottingham' fullname='Mark Nottingham'>
                  <organization />
               </author>
               <author initials='E.' surname='Wilde' fullname='Erik Wilde'>
                  <organization />
               </author>
               <date month='September' day='6' year='2015' />
               <abstract><t>This document defines a "problem detail" as a way to carry machine- readable details of errors in a HTTP response, to avoid the need to invent new error response formats for HTTP APIs.</t></abstract>
            </front>
            <seriesInfo name='Internet-Draft' value='draft-ietf-appsawg-http-problem-01' />
            <format type='TXT'
               target='http://www.ietf.org/internet-drafts/draft-ietf-appsawg-http-problem-01.txt' />
         </reference>
         <reference anchor="JSON-LD" target="http://www.w3.org/TR/json-ld/">
            <front>
               <title>JSON-LD 1.0</title>
               <author initials='M.' surname="Sporny" fullname="Manu Sporny">
                  <organization/>
               </author>
               <author initials='D.' surname="Longley" fullname="Dave Longley">
                  <organization/>
               </author>
               <author initials='G.' surname="Kellogg" fullname="Gregg Kellogg">
                  <organization/>
               </author>
               <author initials='M.' surname="Lanthaler" fullname="Markus Lanthaler">
                  <organization/>
               </author>
               <author initials='N.' surname="Lindstroem" fullname="Niklas Lindstroem">
                  <organization/>
               </author>
               <date month="January" year="2014" day="16"/>
               <abstract><t>JSON is a useful data serialization and messaging format. This specification defines JSON-LD, a JSON-based format to serialize Linked Data. The syntax is designed to easily integrate into deployed systems that already use JSON, and provides a smooth upgrade path from JSON to JSON-LD. It is primarily intended to be a way to use Linked Data in Web-based programming environments, to build interoperable Web services, and to store Linked Data in JSON-based storage engines.</t></abstract>
            </front>
            <seriesInfo name="W3C Recommendation" value="json-ld" />
         </reference>
         <reference anchor="RDF11-CONCEPTS" target="http://www.w3.org/TR/rdf11-concepts/">
            <front>
               <title>RDF 1.1 Concepts and Abstract Syntax</title>
               <author initials='R.' surname="Cyganiak" fullname="Richard Cyganiak">
                  <organization/>
               </author>
               <author initials='D.' surname="Wood" fullname="David Wood">
                  <organization/>
               </author>
               <author initials='M.' surname="Lanthaler" fullname="Markus Lanthaler">
                  <organization/>
               </author>
               <date month="February" year="2015" day="25"/>
               <abstract><t>The Resource Description Framework (RDF) is a framework for representing information in the Web. This document defines an abstract syntax (a data model) which serves to link all RDF-based languages and specifications. The abstract syntax has two key data structures: RDF graphs are sets of subject-predicate-object triples, where the elements may be IRIs, blank nodes, or datatyped literals. They are used to express descriptions of resources. RDF datasets are used to organize collections of RDF graphs, and comprise a default graph and zero or more named graphs. RDF 1.1 Concepts and Abstract Syntax also introduces key concepts and terminology, and discusses datatyping and the handling of fragment identifiers in IRIs within RDF graphs.</t></abstract>
            </front>
            <seriesInfo name="W3C Recommendation" value="rdf11-concepts" />
         </reference>
         <reference anchor='RFC7159'>
            <front>
               <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
               <author initials='T.' surname='Bray' fullname='Tim Bray'>
                  <organization />
               </author>
               <date year='2014' month='March' />
               <abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data. This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
            </front>
            <seriesInfo name='RFC' value='7159' />
            <format type='TXT' octets='27451' target='http://www.rfc-editor.org/rfc/rfc7159.txt' />
         </reference>
      </references>
<!--
      <references title="Informative References">
      </references>
-->
      <section title="HTTP-Problem Vocabulary" anchor="vocabulary">
        <!-- include vocab.jsonld here -->
      </section>
      <section title="HTTP-Problem Context for JSON-LD" anchor="jsonld-context">
        <!-- include context jsonld here -->
      </section>
      <section title="Acknowledgements">
         <t>Thanks for comments and suggestions provided by ...</t>
      </section>
   </back>
</rfc>
