


Network Working Group                                           E. Wilde
Internet-Draft                                           EMC Corporation
Intended status: Informational                             June 17, 2013
Expires: December 19, 2013


                         HTTP Link Descriptions
                        draft-wilde-link-desc-00

Abstract

   Interactions with many resources on the Web are driven by links, and
   these links often define certain expectations about the interactions
   (such as HTTP methods being used, media types being sent in the
   request, or URI parameters being used in a certain way).  While these
   expectations are essential to define the possible framework for
   interactions, it may be useful to further narrow them down by
   providing link descriptions, which can help clients to gain more
   runtime knowledge about the resource they are about to interact with.
   This memo defines Link Descriptions, a schema and a media type that
   can be used to describe links by supporting descriptive markup for
   representing interaction information with links.  Link Descriptions
   can be used by media types (by inclusion or by reference) that seek
   to make Link Descriptions runtime-capable, without having to create
   their own representation.

Note to Readers

   Please discuss this draft on the apps-discuss mailing list [16].

   Online access to all versions and files is available on github [17].

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 19, 2013.



Wilde                   Expires December 19, 2013               [Page 1]

Internet-Draft           HTTP Link Descriptions                June 2013


Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Web Links  . . . . . . . . . . . . . . . . . . . . . . . .  4
     1.2.  URI Templates  . . . . . . . . . . . . . . . . . . . . . .  4
   2.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.  Description Concepts . . . . . . . . . . . . . . . . . . . . .  6
     3.1.  Link Hints . . . . . . . . . . . . . . . . . . . . . . . .  6
     3.2.  Describing Variables . . . . . . . . . . . . . . . . . . .  6
   4.  Link Descriptions  . . . . . . . . . . . . . . . . . . . . . .  7
     4.1.  General Concepts . . . . . . . . . . . . . . . . . . . . .  8
     4.2.  Link Description Structure . . . . . . . . . . . . . . . .  8
     4.3.  Variable Description Structure . . . . . . . . . . . . . .  8
   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  9
     5.1.  Media Type . . . . . . . . . . . . . . . . . . . . . . . .  9
     5.2.  Link Relation  . . . . . . . . . . . . . . . . . . . . . . 10
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 10
   7.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
     7.1.  OpenSearch . . . . . . . . . . . . . . . . . . . . . . . . 11
     7.2.  Atom Feeds . . . . . . . . . . . . . . . . . . . . . . . . 11
   8.  Open Issues  . . . . . . . . . . . . . . . . . . . . . . . . . 11
   9.  Implementation Status  . . . . . . . . . . . . . . . . . . . . 11
   10. Change Log . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     10.1. Prior to -00 . . . . . . . . . . . . . . . . . . . . . . . 12
   11. References . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     11.1. Normative References . . . . . . . . . . . . . . . . . . . 12
     11.2. Informative References . . . . . . . . . . . . . . . . . . 13
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 13







Wilde                   Expires December 19, 2013               [Page 2]

Internet-Draft           HTTP Link Descriptions                June 2013


1.  Introduction

   Interactions with resources found on the Web often are driven by
   following links, which can be either fixed links (described in
   Section 1.1), or can be templated links containing variables
   (described in Section 1.2).  In both cases, the context of the link
   in most cases provides information that can be essential or helpful
   when it comes to interacting with a link: For fixed links, the
   context may specify allowed interaction methods (such as HTTP verbs)
   or expectations around the expected media type in requests; for
   templated links, the context additionally may provide information
   about how to instantiate the variables provided in the URI Template.
   This memo defines a schema and a media type that can be used to
   (partially) represent this information, so that it becomes possible
   to represent a change in interaction affordances at runtime.

   Possible use cases for both scenarios (fixed and templated links) are
   as follows:

      Fixed Links: AtomPub [10] defines an "edit" link relation, that
      tells clients that a link can be followed to read, update, or
      delete a resource.  This means that a client just encountering
      such a link would conclude that it can try to read, update, or
      delete the linked resource.  However, if the resource is not
      deletable, then a "edit" link could be annotated to indicate that
      the linked resource cannot be deleted.  A client could ignore the
      annotation and still attempt to delete the resource, but the
      request would be likely to fail (unless the state of the resource
      changed in the meantime).  This kind of information can be very
      useful for UIs, where it can be used to drive usability features
      such as disabling certain operations.

      Templated Links: URI Templates [1] define a framework for how to
      represent and instantiate (with concrete variable values)
      templated URIs, but they don't cover how variables themselves are
      described, or can be constrained.  If a collection resource for
      example supports paged access to the set of collection members,
      then it might be useful for a client to know the number of
      available pages.  With this additional knowledge, it is possible
      to build applications and UIs that specifically take this
      knowledge into account to drive further interactions with the
      resource.  For a paged collection, it may be a UI that provides
      direct links to all available pages (if that number is reasonably
      small).







Wilde                   Expires December 19, 2013               [Page 3]

Internet-Draft           HTTP Link Descriptions                June 2013


1.1.  Web Links

   One of the defining principles of many services provided on the Web
   is that they expose linked resources, so that clients can follow the
   links in order to accomplish application goals.  "Web Linking" [2]
   establishes a framework of typed links, allowing resources to expose
   typed links, which then can be followed by clients.  While this
   framework allows clients to select links based on their types, it
   does not provide any support for additional runtime information about
   possible interactions with such a link.  As outlined in the AtomPub
   example above, a link typed as "edit" by definition can be followed
   by using HTTP GET, PUT, or DELETE, and the typed link by itself
   cannot provide the additional information that some resource may
   allow updates, but disallows deletion.

   "Link Hints" [3] provide a framework of runtime hints that can be
   used to indicate information that might be made available by the link
   target resource itself, but ahead of time.  For example, a link hint
   would be able to indicate on an "edit" link that the resource only
   allows PUT requests, which is something that could also be discovered
   by sending an HTTP request and getting an HTTP Allow header in the
   response.  However, link hints can save overhead by avoiding round
   trips, and they also allow to minimize the chances of sending
   requests that will not succeed.

   While link hints can help to avoid overhead and drive client
   behavior, they are strictly optional.  There should be no functional
   difference of what a client can achieve by using or ignoring link
   hints; they simply expose information that otherwise would be more
   costly to acquire.

   Since it is potentially expensive to provide link hints in
   representations (because they may involve interpreting access control
   data), it is perfectly possible that services provide link hints only
   on request.  For example, it would be possible to design a service
   that served http://example.com/collection as a collection of items
   with embedded "edit" links, whereas
   http://example.com/collection?hints=true would result in a
   representation that would contain additional link hints for each
   individual "edit" link.  This kind of design is outside of the scope
   of this memo, but it's helpful to illustrate the fact that link hints
   are nothing but optimizations of at which point during interactions
   certain information is provided.

1.2.  URI Templates

   While following links is the basic principle of interacting with
   resources on the web, in many cases, interactions with resources



Wilde                   Expires December 19, 2013               [Page 4]

Internet-Draft           HTTP Link Descriptions                June 2013


   require clients to provide information in addition to just using a
   fixed URI in a request.  In these cases, information can be provided
   in any way supported by the interaction protocol, and in case of
   HTTP, this often means that information is either embedded in the
   URI, and/or in the body of the request.  For the first case, a "URI
   Template" [1] provides a standard that allows servers and clients to
   exchange information about the URIs that a service accepts.  The
   standard specifies "a compact sequence of characters for describing a
   range of Uniform Resource Identifiers through variable expansion."
   It allows servers to publish their expectation how a URI should be
   created by substituting variables with values.  Consider the
   following URI Template:
   http://www.example.com/collection{?pagesize,page}

   This URI Template allows clients to expand it with two variables
   values, to end up with a concrete URI such as the following:
   http://www.example.com/collection?pagesize=10&page=42

   URI Templates cover the aspect of starting with a template with
   variables in it, assigning values to these variables, and then
   expanding the template into a URI that can be used for sending a
   request.  URI Templates make no assumptions or statements about the
   value range of the variables, except for those aspects which are
   required to cover the process of expanding the template.  In
   particular, for the example given above, there is no indication that
   the values are supposed to be positive integers (the simple data
   type), nor is there any indication that the service may apply certain
   limits such as a maximum page size (which may change depending on
   which paged resource is being accessed).  As a side note, even if
   this basic type information was known, URI template expansion could
   still result in URIs that would not yield successful requests, such
   as when asking for a page that is beyond the number of pages that a
   collection has (in a given page size).

   The goal of Link Descriptions as defined in this memo is to allow
   servers to expose a description that provides support both at
   development time (when a developer looks at a media type that uses
   URI Templates) and at runtime (when a client wants to use a URI
   template as part of its application flow).  Link Descriptions are
   intended to provide additional information that is not communicated
   by publishing URI Templates alone.  The additional information is
   both targeted at machines and at humans.  On the human-oriented Web,
   a Template Description can be seen as the equivalent of a help or
   documentation page that is linked to from a form, where users can
   learn more about the values they are supposed to submit within the
   form.

   As a concrete example, a link to a collection like the one above may



Wilde                   Expires December 19, 2013               [Page 5]

Internet-Draft           HTTP Link Descriptions                June 2013


   be exposed in a link description as follows:
<link rel="items" href="http://www.example.com/collection" hreft="http://www.example.com/collection{?pagesize,page}">
  <var name="pagesize" concept="http://example.com/feedpaging/pagesize"/>
  <var name="page" concept="http://example.com/feedpaging/page"/>
</link>

   This link description allows a URI Template's variables to be
   described in terms of URI-identified concepts.  By using such a
   model, it is possible to use global names for URI Template
   parameters, by binding them to the local variable names.


2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [4].


3.  Description Concepts

   ...

3.1.  Link Hints

   ...

3.2.  Describing Variables

   Variables can be described in a variety of ways when using Link
   Descriptions.  For each variable contained in the URI Template, it is
   possible to use the following description methods:

      Concept: It is possible to associate a variable with a concept, so
      that media types and applications can make an association between
      the concepts they are defining/exposing, and how they are exposed
      in URI Templates.  Concepts can be referred to by using a URI as
      an identifier.  This specification defines no interactions with
      this URI identifier and makes no assumption about possible
      representations, should this URI be dereferncable and yield some
      representation.

      Datatype: Variables can be described in terms of using certain
      datatypes.  The datatype vocabulary is that of XML Schema Part 2
      [5], plus all of the applicable facets of those datatypes.  This
      allows Link Descriptions to constrain the set of allowed values.
      (This model does not cover any "co-constraints", i.e. dependencies
      across variables, or between variables and externally defined



Wilde                   Expires December 19, 2013               [Page 6]

Internet-Draft           HTTP Link Descriptions                June 2013


      values.)

      Documentation: Documentation constructs can be associated with
      variables, which allows Link Descriptions to attach human-readable
      information to individual variables.  The documentation constructs
      use the documentation design of XML Schema Part 1 [6].  XML
      Schema's documentation model has the ability to support multi-
      lingual human-oriented documentation.

      Application Information: Application information constructs can be
      associated with variables, which allows Link Descriptions to
      attach machine-readable information to individual variables.  The
      application information constructs use the application information
      design of XML Schema Part 1 [6].

   For the purpose of this specification, the term "description" should
   be interpreted loosely.  Some aspects of descriptions can be formal,
   such as the datatypes of variables.  Thus, such a description can be
   used to drive general-purpose logic that knows no additional
   framework other than this specification.  However, for most other
   description aspects (concepts, documentation, and application
   information), this specification does not prescribe a description
   framework; it simply provides a structure how to deliver these
   descriptions.

   The descriptions of "concepts" and "datatypes" are not mutually
   exclusive.  On the contrary, a concept often will have associated
   constraints that essentially define a datatype.  The difference is
   that while concepts are only described by identifier (allowing a
   consumer to identify a concept that they know about), datatypes are
   described with a built-in vocabulary (XSD datatypes and their
   facets), allowing clients to interpret the datatype description.  As
   a consequence, when a consumer encounters an unknown concept, it adds
   little to the knowledge of the consumer, whereas a datatype
   description can always be interpreted and allows the consumer to
   learn about constraints of the associated variable in a declarative
   way.


4.  Link Descriptions

   Link Descriptions are based on a URI Template, and add descriptive
   elements that allow publishers of URI Templates to describe the URI
   Template as a whole, and to add individual descriptions of all
   variables in the template.  The idea of Link Descriptions is that
   they are made available at design time and/or at runtime, so that
   clients encountering URI Templates as part of HTTP services can find
   more information about the template itself.



Wilde                   Expires December 19, 2013               [Page 7]

Internet-Draft           HTTP Link Descriptions                June 2013


   Ideally, every URI template exposed in an HTTP service should be
   accompanied by a link to a Link Description.  In those XML-based HTTP
   services where URI Templates are exposed in XML attributes named
   "hreft", the suggestion is to add a link to the corresponding Link
   Description in an "hrefd" XML attribute.

4.1.  General Concepts

   As mentioned in Section 1.2, most of the descriptions in this spec do
   not prescribe a specific description framework.  While variables
   (Section 4.3) can be described with a built-in vocabulary of
   datatypes, most other descriptions are either for human consumption,
   or do rely on some external description framework.  To attach these
   descriptions to both the template as a whole, and individual
   variables, this specification reuses the "appinfo" and
   "documentation" elements from XML Schema Part 1 [6].  These elements
   carry a "source" attribute, which is used (quoting from [6]) "to
   supplement the local information."  For example, when a description
   of a variable is done formally using a specific description
   framework, this would best translate to use appinfo elements, and to
   add an identifier to them which would identify the description
   framework in question.  As a result, any client knowing this
   particular description framework would be able to interpret the
   variable description in the Link Description.

4.2.  Link Description Structure

   An interaction is described by including the URI Template itself, and
   optionally adding documentation and/or appinfo elements to add human-
   or machine-readable descriptions.

4.3.  Variable Description Structure

   A variable is described by specifying the variable name.  Variables
   can refer to a "concept" associated with a variable, which can by
   identified by URI.  This specification makes no provision how such a
   concept is defined and/or described/documented, but it allows
   consumers of a Link Description to match their understanding of
   certain concepts to those identifiers, which then establishes a
   binding between the concept, and the variable it has been bound to.

   A variable can have a default value, in which case the assumption is
   that excluding this variable from a request has the same effect as
   including it with the default value.  Since Link Descriptions are
   runtime concepts, however, there is no guarantee that a service might
   not use a different value between the time when the Link Description
   was retrieved, and the time when a request based on it is being sent.




Wilde                   Expires December 19, 2013               [Page 8]

Internet-Draft           HTTP Link Descriptions                June 2013


   Variable descriptions can optionally add documentation and/or appinfo
   elements to add human- or machine-readable descriptions.


5.  IANA Considerations

5.1.  Media Type

   The Internet media type [11] for a Link Description document is
   application/ld+xml (using the "+xml" suffix as defined and registered
   by RFC 6839 [12]).

      Type name: application

      Subtype name: ld+xml

      Required parameters: none

      Optional parameters: profile

         The "profile" link relation [13] allows "resource
         representations to indicate that they are following one or more
         profiles.  A profile is defined not to alter the semantics of
         the resource representation itself, but to allow clients to
         learn about additional semantics (constraints, conventions,
         extensions) that are associated with the resource
         representation, in addition to those defined by the media type
         and possibly other mechanisms."  If the application/ld+xml
         media type is use with a profile parameter, this refers to a
         profile as defined by [13], making it easier for extensions of
         the link description media type to identify themselves.

      Encoding considerations: Same as encoding considerations of
      application/xml as specified in [7].

      Security considerations: This media type has all of the security
      considerations described in [7], plus those listed in Section 6.

      Interoperability considerations: N/A

      Published specification: RFC XXXX

      Applications that use this media type: Applications that publish
      descriptions of URI Interactions.

      Additional information:





Wilde                   Expires December 19, 2013               [Page 9]

Internet-Draft           HTTP Link Descriptions                June 2013


         Magic number(s): none

         File extension(s): XML data should use ".xml" as the file
         extension.

         Macintosh file type code(s): TEXT

      Person & email address to contact for further information: Erik
      Wilde <erik.wilde@emc.com>

      Intended usage: COMMON

      Restrictions on usage: none

      Author: Erik Wilde <erik.wilde@emc.com>

      Change controller: IETF

5.2.  Link Relation

   The link relation type below will be registered by IANA per Section
   6.2.1 of RFC 5988 [2]:

      Relation Name: link-desc

      Description: Linking to a resource that can be used as a link
      description for creating a request URI for the context resource.

      Reference: RFC XXXX

      Notes: Link Descriptions can be used in all scenarios where
      clients want to create requests that represent a query into the
      context resource.  The media type of the context resource and the
      media type of the link description resource are not constrained by
      this specification.


6.  Security Considerations

   ...


7.  Examples

   ...






Wilde                   Expires December 19, 2013              [Page 10]

Internet-Draft           HTTP Link Descriptions                June 2013


7.1.  OpenSearch

   ...

7.2.  Atom Feeds

   ...

   "Feed Paging and Archiving" specified in RFC 5005 [14]

   Maybe suggest to use profiles?


8.  Open Issues

      If and how to use profiles (example in Section 7); if profile use
      is recommended, define a suggested profile URI for other specs to
      use?

      How to handle variables in Level 4 templates that are supposed to
      have composite values?

      If a template is refined in an incremental process (such as for
      example faceted search services), does it make sense to be able to
      add a "back" link and/or "home" link, so that clients can find the
      "most general" version easily?

      How does this interact with "faceted search" scenarios?  Does
      incremental refinement of URI Template Descriptions somehow nicely
      and naturally map into faceted search scenarios?

      Is there a concept of how Template Descriptions (and thus URI
      Templates) can be reused?  Should there be an inclusion facility
      or something along those lines?  If so, what's the model for that?
      Initial thoughts on possibilities can be found on this page [18]

      Should there be some recommended link relation to use when linking
      to a Template Description from within the context of a URI
      Template?


9.  Implementation Status

   Note to RFC Editor: Please remove this section before publication.

   As explained in a draft currently under development
   <http://tools.ietf.org/html/draft-sheffer-running-code>, this section
   contains information about implementation status, so that reviews of



Wilde                   Expires December 19, 2013              [Page 11]

Internet-Draft           HTTP Link Descriptions                June 2013


   the draft document can take implementation reports into account as
   well.  If you are implementing this draft, please contact this
   draft's authors.  Any implementation status reports are intended for
   draft publications only; the section will be removed when the draft
   is published in RFC form.

      DescProc: <https://github.com/dret/DescProc>


10.  Change Log

   Note to RFC Editor: Please remove this section before publication.

10.1.  Prior to -00

   An earlier variation of a similar idea was published as "Template
   Descriptions" [15].  However, since this earlier draft was
   exclusively focusing on interactions with links driven by URI
   Templates [1], instead of looking at links in general, it was
   sufficiently distinct to start a new draft, instead of evolving the
   existing one.


11.  References

11.1.  Normative References

   [1]   Gregorio, J., Fielding, R., Hadley, M., Nottingham, M., and D.
         Orchard, "URI Template", RFC 6570, March 2012.

   [2]   Nottingham, M., "Web Linking", RFC 5988, October 2010.

   [3]   Nottingham, M., "HTTP Link Hints",
         draft-nottingham-link-hint-00 (work in progress), June 2013.

   [4]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", RFC 2119, March 1997.

   [5]   Malhotra, A. and P. Biron, "XML Schema Part 2: Datatypes Second
         Edition", World Wide Web Consortium Recommendation REC-
         xmlschema-2-20041028, October 2004,
         <http://www.w3.org/TR/2004/REC-xmlschema-2-20041028>.

   [6]   Thompson, H., Beech, D., Mendelsohn, N., and M. Maloney, "XML
         Schema Part 1: Structures Second Edition", World Wide Web
         Consortium Recommendation REC-xmlschema-1-20041028,
         October 2004,
         <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>.



Wilde                   Expires December 19, 2013              [Page 12]

Internet-Draft           HTTP Link Descriptions                June 2013


   [7]   Murata, M., St. Laurent, S., and D. Kohn, "XML Media Types",
         RFC 3023, January 2001.

   [8]   Nottingham, M., Ed. and R. Sayre, Ed., "The Atom Syndication
         Format", RFC 4287, December 2005.

   [9]   Hollander, D., Layman, A., Thompson, H., Tobin, R., and T.
         Bray, "Namespaces in XML 1.0 (Third Edition)", World Wide Web
         Consortium Recommendation REC-xml-names-20091208,
         December 2009,
         <http://www.w3.org/TR/2009/REC-xml-names-20091208>.

11.2.  Informative References

   [10]  Gregorio, J. and B. de hOra, "The Atom Publishing Protocol",
         RFC 5023, October 2007.

   [11]  Freed, N., Klensin, J., and T. Hansen, "Media Type
         Specifications and Registration Procedures", BCP 13, RFC 6838,
         January 2013.

   [12]  Hansen, T. and A. Melnikov, "Additional Media Type Structured
         Syntax Suffixes", RFC 6839, January 2013.

   [13]  Wilde, E., "The 'profile' Link Relation Type", RFC 6906,
         March 2013.

   [14]  Nottingham, M., "Feed Paging and Archiving", RFC 5005,
         September 2007.

   [15]  Wilde, E., Davis, C., and Y. Liu, "URI Template Descriptions",
         draft-wilde-template-desc-00 (work in progress), December 2012.

URIs

   [16]  <https://www.ietf.org/mailman/listinfo/apps-discuss>

   [17]  <https://github.com/dret/I-D/tree/master/link-desc>

   [18]  <http://dret.typepad.com/dretblog/2012/12/
         structuring-uri-templates.html>










Wilde                   Expires December 19, 2013              [Page 13]

Internet-Draft           HTTP Link Descriptions                June 2013


Author's Address

   Erik Wilde
   EMC Corporation
   6801 Koll Center Parkway
   Pleasanton, CA 94566
   U.S.A.

   Phone: +1-925-6006244
   Email: erik.wilde@emc.com
   URI:   http://dret.net/netdret/








































Wilde                   Expires December 19, 2013              [Page 14]

